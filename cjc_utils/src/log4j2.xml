<?xml version="1.0" encoding="UTF-8"?>  
<Configuration>

    <Appenders>  
    	<!-- 输出到控制台 -->  
        <Console name="CONSOLE" target="SYSTEM_OUT">  
            <!-- 输出格式; " thread=[%t]":是输出产生该日志事件的线程名; %C{2}:产生log的java完全限定类名 --> 
            <!-- HH:mm:ss.SSS 带毫秒的这样写 -->
            <PatternLayout pattern="%n%msg%n%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{2} %M{20} %L{10}%n" />  
        </Console>  
        
        <!-- 按天备份一个日志 (logs/logs_%d{yyyy-MM-dd-HH}.log)-->  
        <!-- fileName为生成的文件名，x为路径，也可以采用相对路径模式，filePattern为时间到达后产生新日志，旧日志的文件名 -->  
        <RollingFile name="TASK" fileName="logs/logs.log"  
            filePattern="logs/logs_%d{yyyy-MM-dd}.log" >   
            <!-- 输出格式 -->  
            <PatternLayout pattern="%n%m%n%d{MM-dd HH:mm:ss} %-5p %logger{1} %M{20} %L{10}%n" />  
            <Policies>  
            <!-- 每1天更新一次，此处查阅网上和官方示例中，都是以小时出现，我测试是以天为单位。（官方文档中说明按item类型是否是小时，但没找到在哪里设置item类型）另有其他各类型策略，请参阅官方文档 -->  
                <TimeBasedTriggeringPolicy modulate="true"  interval="1" />  
                <!-- 此处为每个文件大小策略限制，使用它一般会在文件中filePattern采用%i模式 -->  
                <!-- <SizeBasedTriggeringPolicy size="128KB" /> -->  
            </Policies>  
            
            <!-- 最多备份90天以内的日志，此处为策略限制，Delete中可以按自己需要用正则表达式编写 -->  
	        <!-- DefaultRolloverStrategy字段中加入max=“30”经测试是配合SizeBasedTriggeringPolicy限制%i的存在数量，并没有发现是网上流传的是最多保存多少个文件的限制，也或许是我写的有问题 -->  
	        <DefaultRolloverStrategy>  
	        	<Delete basePath="logs/" maxDepth="1">  
	                     <IfFileName glob="logs_*.log" />  
	                     <IfLastModified age="90d" />  
	            </Delete>  
	        </DefaultRolloverStrategy>  
        </RollingFile>  
    </Appenders>  
    
    <!-- 链接到Console和RollingFile标签实现debug以上等级的输出 -->  
    <loggers>    
	    <root level="info">    
	        <appender-ref ref="CONSOLE"/>    
	        <AppenderRef ref="TASK" />  
	    </root>    
    </loggers>

</Configuration>  